#!/usr/bin/perl -w
# vi: set ts=4 sw=4 :
#____________________________________________________________________________
#
#   MusicBrainz -- The community music metadata project.
#
#   Copyright (C) 2004 Robert Kaye
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#   $Id$
#____________________________________________________________________________

use strict;

use FindBin;
use lib "$FindBin::Bin/../../lib";

use DBDefs;
use MusicBrainz;
use MusicBrainz::Server::Annotation ':type';

sub showhelp { print <<EOF; }
Usage: RemoveAnnotations [OPTIONS]

Allowed options are:
        --[no]dry-run     don't actually make any changes (best used with
                          --verbose) (default is to make the changes)
        --[no]verbose     show the changes as they are made
        --[no]summary     show a summary when done
        --[no]debug       show lots of debugging information
        --help            show this help

EOF

use Getopt::Long;
my $debug = 0;
my $dry_run = 0;
my $verbose = -t;
my $summary = -t;
GetOptions(
	"dry-run|dryrun!"	=> \$dry_run,
	"verbose!"			=> \$verbose,
	"summary!"			=> \$summary,
	"help"				=> sub { showhelp(); exit 0; },
) or exit 2;
showhelp(), exit 2 if @ARGV;

print localtime() . " : RemoveAnnotations starting\n";
eval 'END { print localtime() . " : RemoveAnnotations complete\n"; }';

my $mb = MusicBrainz->new;
$mb->Login;
my $sql = Sql->new($mb->{dbh});
$sql->AutoCommit;

$| = 1;

=pod

This script deletes all annotations that have lost their corresponding
artist or album due to a merge or delete mod. In case we want to delete
part of the annotation history, the appropriate predicate has to be
added to the Select call below.

=cut

print localtime() . " : Selecting annotations\n";

my $ids = $sql->SelectSingleColumnArray(
	  " SELECT	id "
	. " FROM	annotation a "
	. " WHERE	( a.type = ? AND a.rowid NOT IN (SELECT id FROM artist) ) "
	. "		OR ( a.type = ? AND a.rowid NOT IN (SELECT id FROM album) ) ",
	ARTIST_ANNOTATION,
	RELEASE_ANNOTATION,
);

unless ( defined $ids )
{
	die localtime() . " : Select failed\n";
}

my $selected = @$ids;
my $deleted = 0;

print localtime() . " : Selected $selected annotations\n";

foreach my $id ( @$ids )
{
	print localtime() . " : Deleting annotation #$id\n" if $verbose;

	unless ( $dry_run ) {
		if ( $sql->Do("DELETE FROM annotation WHERE id = ?", $id) )
		{
			$deleted++;
		}
		else
		{
			warn localtime() . " : Annotation #$id couldn't be deleted\n";
		}
	}
}

$sql->Finish;

printf (<<EOF, scalar(localtime), $selected, $deleted) if $summary;
%s : Summary follows:
		Selected: %d
		Deleted: %d
EOF

# eof RemoveAnnotations
